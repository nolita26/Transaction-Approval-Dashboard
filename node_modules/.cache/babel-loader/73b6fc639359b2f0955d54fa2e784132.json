{"ast":null,"code":"var _jsxFileName = \"/Users/nolitarego/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState({\n    [transaction.id]: transaction.approved\n  });\n\n  const handleApprovalChange = async (transactionId, newValue) => {\n    try {\n      // Update approval state first\n      setApproved(prev => ({ ...prev,\n        [transactionId]: newValue\n      })); // Then call the API\n\n      await consumerSetTransactionApproval({\n        transactionId,\n        newValue\n      });\n    } catch (error) {\n      console.error('Failed to update approval:', error);\n    }\n  }; // Ensure state updates when the transaction props change\n\n\n  useEffect(() => {\n    setApproved(prev => ({ ...prev,\n      [transaction.id]: transaction.approved\n    }));\n  }, [transaction.id, transaction.approved]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: transaction.merchant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved[transaction.id] || false,\n      disabled: loading,\n      onChange: async newValue => {\n        await handleApprovalChange(transaction.id, newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"IGUvaSErP8jwOawVs6moKD0Bg/I=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","useEffect","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","id","handleApprovalChange","transactionId","newValue","prev","error","console","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","Intl","NumberFormat","style","currency"],"sources":["/Users/nolitarego/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { TransactionPaneComponent } from \"./types\";\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState<{ [key: string]: boolean }>({\n    [transaction.id]: transaction.approved\n  });\n\n  const handleApprovalChange = async (transactionId: string, newValue: boolean) => {\n    try {\n      // Update approval state first\n      setApproved((prev) => ({ ...prev, [transactionId]: newValue }));\n      \n      // Then call the API\n      await consumerSetTransactionApproval({\n        transactionId,\n        newValue,\n      });\n    } catch (error) {\n      console.error('Failed to update approval:', error);\n    }\n  };\n\n  // Ensure state updates when the transaction props change\n  useEffect(() => {\n    setApproved((prev) => ({ ...prev, [transaction.id]: transaction.approved }));\n  }, [transaction.id, transaction.approved]);\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant}</p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved[transaction.id] || false}\n        disabled={loading}\n        onChange={async (newValue) => {\n          await handleApprovalChange(transaction.id, newValue);\n        }}\n      />\n    </div>\n  );\n};\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAA6B;IACnE,CAACI,WAAW,CAACM,EAAb,GAAkBN,WAAW,CAACI;EADqC,CAA7B,CAAxC;;EAIA,MAAMG,oBAAoB,GAAG,OAAOC,aAAP,EAA8BC,QAA9B,KAAoD;IAC/E,IAAI;MACF;MACAJ,WAAW,CAAEK,IAAD,KAAW,EAAE,GAAGA,IAAL;QAAW,CAACF,aAAD,GAAiBC;MAA5B,CAAX,CAAD,CAAX,CAFE,CAIF;;MACA,MAAMN,8BAA8B,CAAC;QACnCK,aADmC;QAEnCC;MAFmC,CAAD,CAApC;IAID,CATD,CASE,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;IACD;EACF,CAbD,CALI,CAoBJ;;;EACAd,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAEK,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAW,CAACV,WAAW,CAACM,EAAb,GAAkBN,WAAW,CAACI;IAAzC,CAAX,CAAD,CAAX;EACD,CAFQ,EAEN,CAACJ,WAAW,CAACM,EAAb,EAAiBN,WAAW,CAACI,QAA7B,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,UAAyBJ,WAAW,CAACa;MAArC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBf,WAAW,CAACgB,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGhB,WAAW,CAACiB,QAAZ,CAAqBC,SADxB,OACoClB,WAAW,CAACiB,QAAZ,CAAqBE,QADzD,SACsEnB,WAAW,CAACoB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEpB,WAAW,CAACM,EADlB;MAEE,OAAO,EAAEF,QAAQ,CAACJ,WAAW,CAACM,EAAb,CAAR,IAA4B,KAFvC;MAGE,QAAQ,EAAEL,OAHZ;MAIE,QAAQ,EAAE,MAAOQ,QAAP,IAAoB;QAC5B,MAAMF,oBAAoB,CAACP,WAAW,CAACM,EAAb,EAAiBG,QAAjB,CAA1B;MACD;IANH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAhDM;;GAAMV,e;;KAAAA,e;AAkDb,MAAMe,cAAc,GAAG,IAAIO,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}